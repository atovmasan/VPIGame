{"version":3,"sources":["ReactComponents/Shapka/Shapka.jsx","Redux/ContentReducer.js","DAL/CountryData.js","Redux/redux-store.js","DAL/NewParametr.js","ReactComponents/Content/Input.jsx","ReactComponents/Content/ContentForm.jsx","ReactComponents/Content/Country.jsx","DAL/NextData.js","ReactComponents/Content/ContentContainer.jsx","ReactComponents/Content/Content.jsx","DAL/NewCountry.js","App.js","reportWebVitals.js","index.js"],"names":["Shapka","props","react_default","a","createElement","className","initialState","CountryData","IsShowData","CountriesTruth","name","id","Economy","coffers","count","Growhts","NewDataActionCreator","NewData","type","newData","SaveDataActionCreator","savedData","savedD","ContentReducer","state","arguments","length","undefined","action","Object","objectSpread","country","data","DELCOUN","pop","DELPAR","C","par","thunkDataCreator","ThunkDataForPosts","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","getDocs","collection","getFirestore","sent","forEach","doc","stop","_x","apply","this","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","__store__","NewParametrThunkCreator","_Parametr","getState","LastElementID","push","console","log","_x2","Input","useDispatch","_useState","useState","_useState2","slicedToArray","datas","setData","value","onChange","event","Number","target","onClick","d","Inputs","_useState3","_useState4","datass","setDatas","_useState5","_useState6","datasss","setDatass","String","SimpleForm","parametr","setParametr","GrowhtsMap","map","Input_Input","EconomMap","Input_Inputs","color","Country","setCount","ActivateEditMode","EconomyMap","key","ContentForm_SimpleForm","es_button","_NextData","i","db","LastCountryID","setDoc","_NextData2","_callee2","_context2","_x3","_x4","ContentContainer","connect","componentMap","Country_Country","component","listMap","_ThunkDataForList","list","setList","_NC","CountyList","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","es","Shapka_Shapka_Shapka","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","__webpack_exports__","Context","createContext","process","ReactDOM","render","react_router_dom","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7e7bee70.chunk.js","sourcesContent":["import React, { Component }  from 'react'\nimport \"./Shapka.css\"\n\nexport const Shapka = (props) => {\n    return (\n        <div className={\"ShapkaDIV\"}>\n        </div>\n    )\n}","const GIVE_DATA = \"GIVE-DATA\"\nconst NEW_DATA = \"NEW-DATA\"\nconst SAVE_DATA = \"SAVE-DATA\"\nconst SHOW_DATA = \"SHOW-DATA\"\nconst GIVE_EXTRA_DATA = \"GIVE-EXTRA-DATA\"\nconst DEL_COUN = \"DEL-COUN\"\nconst DEL_PAR = \"DEL-PAR\"\n\n\n\nlet initialState = {\n    CountryData: {\n        IsShowData: false,\n        CountriesTruth: [\n            {\n                name: \"I do not know\",\n                id: 0,\n                Economy: [\n                    {\n                        coffers: {\n                            count: 1,\n                            id: 0\n                        }\n                    }\n                ],\n                Growhts: [\n                    {\n                        coffers: {\n                            count: 1,\n                            id: 0\n                        }\n                    }\n                ]\n            }\n        ]\n    }\n\n}\n\n\nexport const ContentReducer = (state = initialState, action) => {\n    if (action.type === GIVE_DATA) {\n        return { ...state, CountryData: action.country }\n    }\n    if (action.type === GIVE_EXTRA_DATA) {\n        return { ...state, CountryData: action.data }\n    }\n    if (action.type === NEW_DATA) {\n        return { ...state, CountriesTruth: action.newData }\n    }\n    if (action.type === SAVE_DATA) {\n        return { ...state, CountriesTruth: action.savedD }\n    }\n    if (action.type === SHOW_DATA) {\n        return { ...state, IsShowData: true }\n    }\n    if (action.type === DEL_COUN) {\n        let DELCOUN = state.CountryData\n        DELCOUN.CountriesTruth.pop(action.id)\n        return { ...state, CountryData: DELCOUN }\n    }\n    if (action.type === DEL_PAR) {\n        let DELPAR = state.CountryData\n        DELPAR.CountriesTruth[action.C].Economy.pop(action.par)\n        DELPAR.CountriesTruth[action.C].Growhts.pop(action.par)\n        return { ...state, CountryData: DELPAR }\n    }\n    return state\n}\n\n\nexport const GiveDataActionCreator = (CountryData) => ({ type: GIVE_DATA, country: CountryData })\nexport const GiveExtraDataActionCreator = (Data) => ({ type: GIVE_EXTRA_DATA, data: Data })\nexport const NewDataActionCreator = (NewData) => ({ type: NEW_DATA, newData: NewData })\nexport const SaveDataActionCreator = (savedData) => ({ type: SAVE_DATA, savedD: savedData })\nexport const ShowDataActionCreator = () => ({ type: SHOW_DATA })\nexport const DeleteCountry = (id) => ({ type: DEL_COUN, id: id })\nexport const DeleteParametr = (C, par) => ({ type: DEL_PAR, C: C, par: par })\n\nexport default ContentReducer","import 'firebase/firestore'\nimport { collection, getDocs, query, where  } from \"firebase/firestore\"\nimport { getFirestore } from \"firebase/firestore\"\nimport { GiveDataActionCreator, ShowDataActionCreator } from \"../Redux/ContentReducer\"\nimport { Firestore } from 'firebase/firestore'\n\n\nexport const thunkDataCreator = ThunkDataForPosts => async dispatch => {\n    let CountriesData = 5\n    const querySnapshot = await getDocs(collection(getFirestore(), \"EveryData\"))\n    querySnapshot.forEach((doc) => {\n        CountriesData = doc\n        dispatch(GiveDataActionCreator(CountriesData.data()))\n        dispatch(ShowDataActionCreator())\n    })\n}\n\nexport const thunkDataListCreator = (name) => {\n    return async function ThunkDataForList(dispatch, getState) {\n        for (let i = 0; i <= getState().ContentReducer.CountryData.CountriesTruth[0].LastCountryID; i++) {\n            let CName = getState().ContentReducer.CountryData.CountriesTruth[i].name\n            if (CName === name) {\n                console.log(getState().ContentReducer.CountryData.CountriesTruth[i])\n            }\n        }\n    }\n}","import {combineReducers, createStore, applyMiddleware} from \"redux\"\nimport ContentReducer from \"./ContentReducer\"\nimport thunk from \"redux-thunk\"\n\n\nlet reducers = combineReducers({\n    ContentReducer: ContentReducer\n})\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nexport const store = createStore(reducers,  composeEnhancers(applyMiddleware(thunk)));\nwindow.__store__ = store;","import { GiveExtraDataActionCreator } from \"../Redux/ContentReducer\"\n\n\n\nexport const NewParametrThunkCreator = (id, name) => {\n    return async function Parametr(dispatch, getState) {\n        let data = getState().ContentReducer.CountryData\n        data.CountriesTruth[id].LastElementID = data.CountriesTruth[id].LastElementID + 1\n        data.CountriesTruth[id].Economy.push({\n            coffers: {\n                count: 1,\n                id: data.CountriesTruth[id].LastElementID,\n                name: name\n            }\n        })\n        data.CountriesTruth[id].Growhts.push({\n            coffers: {\n                count: 1,\n                id: data.CountriesTruth[id].LastElementID,\n                name: name\n            }\n        })\n        console.log(data)\n        dispatch(GiveExtraDataActionCreator(data))\n    }\n}","import React, { Component, useState }  from 'react'\nimport { useDispatch } from \"react-redux\"\nimport { SaveDataActionCreator } from \"../../Redux/ContentReducer\"\nimport { NextDataThunkCreator } from \"../../DAL/NextData\"\n\n\nexport const Input = (props) => {\n    const dispatch = useDispatch()\n\n    \n    const [datas, setData] = useState(props.data.coffers.count)\n    function changeData(event) {\n        setData(Number(event.target.value))\n    }\n    function saveData() {\n        let d = { ...props.d }\n        d.Growhts[d.Growhts[props.data.coffers.id].coffers.id].coffers.count = datas\n        dispatch(SaveDataActionCreator(d, d.id))\n        // dispatch(NextDataThunkCreator(d.id, d.LastElementID))\n    }\n\n    return (\n        <div>\n            <li>\n                <input type=\"number\" value={datas} onChange={changeData} />\n            </li>\n            <button type=\"button\" onClick={saveData}>Сохранить изменения</button>\n\n        </div>\n\n    )\n}\n\n\n\n\nexport const Inputs = (props) => {\n    const dispatch = useDispatch()\n\n    \n    const [datass, setDatas] = useState(props.data.coffers.count)\n    function changeDatas(event) {\n        setDatas(Number(event.target.value))\n    }\n\n    const [datasss, setDatass] = useState(props.data.coffers.name)\n    function changeDatass(event) {\n        setDatass(String(event.target.value))\n    }\n\n    function saveData() {\n        let d = { ...props.d }\n        d.Economy[d.Economy[props.data.coffers.id].coffers.id].coffers.count = datass\n        d.Economy[d.Economy[props.data.coffers.id].coffers.id].coffers.name = datasss\n        dispatch(SaveDataActionCreator(d, d.id))\n        // dispatch(NextDataThunkCreator(d.id, d.LastElementID))\n    }\n\n    return (\n        <div>\n            <li>\n                <input value={datasss} onChange={changeDatass} />\n                <input type=\"number\" value={datass} onChange={changeDatas} />\n            </li>\n            <button type=\"button\" onClick={saveData}>Сохранить изменения</button>\n\n        </div>\n\n    )\n}","import React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { SaveDataActionCreator } from \"../../Redux/ContentReducer\"\nimport { NextDataThunkCreator } from \"../../DAL/NextData\"\nimport { NewParametrThunkCreator } from \"../../DAL/NewParametr\"\nimport { Input, Inputs } from \"./Input\"\n\n\nexport const SimpleForm = (props) => {\n    const dispatch = useDispatch()\n\n\n    const [parametr, setParametr] = useState()\n    function changeParametr(event) {\n        setParametr(event.target.value)\n    }\n\n\n    function newParametr() {\n        let data = { ...props.data }\n        dispatch(NewParametrThunkCreator(data.id, parametr))\n    }\n\n    let GrowhtsMap = props.data.Growhts.map(data =>\n        <Input data={data} d={props.data} />\n    )\n\n    let EconomMap = props.data.Economy.map(data =>\n        <Inputs data={data} d={props.data} />\n    )\n    return (\n        <div>\n            <h1 color=\"white\">Развитие за ход(редактирование)</h1>\n            <ul>\n                {GrowhtsMap}\n            </ul>\n            <ul>\n                {EconomMap}\n            </ul>\n            <div>\n                <h3>Новый параметр</h3>\n                <input value={parametr} onChange={changeParametr} />\n                <button type=\"button\" onClick={newParametr}>Сохранить параметр</button>\n            </div>\n        </div>\n    )\n}\n","import React, { Component, useState }  from 'react'\nimport { NextDataThunkCreator, NDataThunkCreator } from \"../../DAL/NextData\"\nimport { store } from \"../../Redux/redux-store\"\nimport \"./Content.css\"\nimport { Button } from \"antd\"\nimport { SimpleForm } from \"./ContentForm\"\nimport { DeleteCountry, DeleteParametr } from '../../Redux/ContentReducer'\n\n\n\nexport let Country = (props) => {\n    const [count, setCount] = useState(false);\n    let ActivateEditMode = () => {\n        setCount(true)\n    }\n    let DeActivateEditMode = () => {\n        setCount(false)\n    }\n    let EconomyMap = props.Economy.map(data =>\n        <span>\n            <p>{data.coffers.name}: {data.coffers.count} </p>\n            <button onClick={() => store.dispatch(DeleteParametr(props.id, data.coffers))}/>\n        </span>\n    )\n\n    let GrowhtsMap = props.Growhts.map(data =>\n        <li>\n            <p>{data.coffers.name}: {data.coffers.count} </p>\n        </li>\n    )\n    return (\n        <div className='Country' key={props.id}>\n            <div>\n                <h1>{props.name}</h1>\n                {count === true &&\n                    <SimpleForm props data={props} />\n                }\n                {\n                    count === false &&\n                    <p>Режим редактирования выключен</p>\n                }\n                <div className={\"BT\"}>\n                    <Button onClick={() => store.dispatch(NextDataThunkCreator(props.id, props.LastElementID))} >Следующий ход</Button>\n                    <Button onClick={() => store.dispatch(NDataThunkCreator(props.id, props.LastElementID))} >Добавить к значению</Button>\n                </div>\n                <div className={\"BT\"}>\n                    <Button onClick={ActivateEditMode} >Редактирование</Button>\n                    <Button onClick={DeActivateEditMode} >Выйти из редактирования</Button>\n                    <Button onClick={() => store.dispatch(DeleteCountry(props.id))} >Удалить страну</Button>\n                </div>\n                <h2>Статы:</h2>\n                <ul>\n                    {EconomyMap}\n                </ul>\n            </div>\n            <div>\n                <h2>Изменение за ход:</h2>\n                <ul>\n                    {GrowhtsMap}\n                </ul>\n                <Button onClick={ActivateEditMode}>Новый параметр</Button>\n            </div>\n        </div>\n    )\n}","import { NewDataActionCreator } from \"../Redux/ContentReducer\"\nimport { thunkDataCreator } from \"./CountryData\"\nimport { doc, getFirestore, setDoc } from \"firebase/firestore\"\n\n\n\nexport const NextDataThunkCreator = (id, lastID) => {\n    return async function NextData(dispatch, getState) {\n        let data = getState().ContentReducer.CountryData.CountriesTruth\n        for (let a = 0; a < data[0].LastCountryID; a++) {\n             for (let i = 0; i < data[a].LastElementID + 1; i++) {\n                 data[a].Economy[i].coffers.count = data[a].Economy[i].coffers.count + data[a].Growhts[i].coffers.count\n             }\n        }\n        \n        dispatch(NewDataActionCreator(data))\n\n\n        const db = getFirestore()\n        await setDoc(doc(db, \"EveryData\", \"Countries\"), {\n            CountriesTruth: getState().ContentReducer.CountryData.CountriesTruth\n        });\n\n        dispatch(thunkDataCreator())\n    }\n}\n\n\n\n\nexport const NDataThunkCreator = (id, lastID) => {\n    return async function NextData(dispatch, getState) {\n        let data = getState().ContentReducer.CountryData.CountriesTruth\n             for (let i = 0; i < data[id].LastElementID + 1; i++) {\n                 data[id].Economy[i].coffers.count = data[id].Economy[i].coffers.count + data[id].Growhts[i].coffers.count\n             }\n        \n        dispatch(NewDataActionCreator(data))\n\n\n        const db = getFirestore()\n        await setDoc(doc(db, \"EveryData\", \"Countries\"), {\n            CountriesTruth: getState().ContentReducer.CountryData.CountriesTruth\n        });\n\n        dispatch(thunkDataCreator())\n    }\n}\n\nexport const NextParametrThunkCreator = (id, lastID) => {\n    return async function NextData(dispatch, getState) {\n        let data = getState().ContentReducer.CountryData.CountriesTruth\n        dispatch(NewDataActionCreator(data))\n\n\n        const db = getFirestore()\n        await setDoc(doc(db, \"EveryData\", \"Countries\"), {\n            CountriesTruth: getState().ContentReducer.CountryData.CountriesTruth\n        });\n\n        dispatch(thunkDataCreator())\n    }\n}","import React, { Component }  from 'react'\nimport { Content } from \"./Content\"\nimport { connect } from \"react-redux\"\nimport \"./Content.css\"\nimport { Country } from \"./Country\"\n\n\n\n\nlet mapStateToProps = (state) => {\n    let CD = state.ContentReducer.CountryData.CountriesTruth\n    let componentMap = CD.map(data =>\n          <Country {...data}/>\n    )\n    return {\n        data: state.ContentReducer.CountryData,\n        component: componentMap\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {}\n}\n\nexport const ContentContainer = connect(mapStateToProps, mapDispatchToProps)(Content);","import React, { Component }  from 'react'\nimport \"./Content.css\"\nimport { Button } from \"antd\"\nimport { thunkDataCreator, thunkDataListCreator } from \"../../DAL/CountryData\"\nimport { useDispatch } from \"react-redux\"\nimport { useState } from 'react'\nimport { NewCountry } from '../../DAL/NewCountry'\n\n\n\nexport let Content = (props) => {\n    let listMap = props.data.CountriesTruth.map(data =>\n        <li onClick={() => dispatch(thunkDataListCreator(data.name))}>\n            {data.name}\n        </li>\n    )\n\n\n    const [parametr, setParametr] = useState()\n    function changeParametr(event) {\n        setParametr(event.target.value)\n    }\n\n    const dispatch = useDispatch()\n    const [list, setList] = useState(0)\n    return (\n        <div>\n            <div className={\"BT\"}>\n                <Button key={\"MainButton\"} onClick={() => dispatch(thunkDataCreator())} >Увидеть страны</Button>\n                <Button onClick={() => setList(list + 1)} >Список стран</Button>\n                <div>\n                <input value={parametr} onChange={changeParametr} />\n                <Button onClick={() => dispatch(NewCountry(parametr))} >Добавить страну</Button>\n                </div>\n                \n            </div>\n            {\n                list % 2 === 0 &&\n                <ul>\n                    {listMap}\n                </ul>\n            }\n            {props.component}\n        </div >\n    )\n}","import { SaveDataActionCreator } from \"../Redux/ContentReducer\"\n\nexport const NewCountry = (name) => {\n    return async function NC(dispatch, getState) {\n        let CountyList = getState().ContentReducer.CountryData.CountriesTruth\n        CountyList[0].LastCountryID++\n        CountyList.push({\n            id:  getState().ContentReducer.CountryData.CountriesTruth[0].id + getState().ContentReducer.CountryData.CountriesTruth[0].LastCountryID,\n            name: name,\n            LastElementID: 1,\n            Economy: [\n                {\"coffers\": {id: 0, name: \"coffers\", count: 1000}}\n            ],\n            Growhts: [\n                {\"coffers\": {id: 0, name: \"coffers\", count: 1000}}\n            ]\n    })\n    dispatch(SaveDataActionCreator(CountyList))\n    }\n}","import React from 'react'\nimport './App.css'\nimport { Shapka } from \"./ReactComponents/Shapka/Shapka\"\nimport { ContentContainer } from \"./ReactComponents/Content/ContentContainer\"\nimport { initializeApp } from 'firebase/app'\nimport { Provider } from \"react-redux\"\nimport { store } from \"./Redux/redux-store\"\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAi-yjk9hzpcm5z0Gmm5CYjEe9iQ8P2b3A\",\n    authDomain: \"vpi-server1930tk.firebaseapp.com\",\n    projectId: \"vpi-server1930tk\",\n    storageBucket: \"vpi-server1930tk.appspot.com\",\n    messagingSenderId: \"988585749896\",\n    appId: \"1:988585749896:web:3d7f116e4bbaf45f219e3d\",\n    measurementId: \"G-LV7K6ZQ12H\"\n}\n\nexport const app = initializeApp(firebaseConfig)\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div>\n                <div className={\"div\"}>\n                    <Shapka />\n                </div>\n                <div className={\"div\"}>\n                    <ContentContainer />\n                </div>\n            </div>\n        </Provider>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { createContext } from 'react'\nimport { HashRouter, Router } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './Redux/redux-store'\n\n\nexport const Context = createContext(null)\nconsole.log(process.env.PUBLIC_URL)\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}